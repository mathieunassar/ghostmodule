// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ghost.proto

#include "Ghost.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Ghost {
namespace internal {
namespace protobuf {
class GhostMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GhostMessage>
      _instance;
} _GhostMessage_default_instance_;
class GhostMessageHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GhostMessageHeader>
      _instance;
} _GhostMessageHeader_default_instance_;
}  // namespace protobuf
}  // namespace internal
}  // namespace Ghost
namespace protobuf_Ghost_2eproto {
void InitDefaultsGhostMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Ghost_2eproto::InitDefaultsGhostMessageHeader();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::Ghost::internal::protobuf::_GhostMessage_default_instance_;
    new (ptr) ::Ghost::internal::protobuf::GhostMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Ghost::internal::protobuf::GhostMessage::InitAsDefaultInstance();
}

void InitDefaultsGhostMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGhostMessageImpl);
}

void InitDefaultsGhostMessageHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Ghost::internal::protobuf::_GhostMessageHeader_default_instance_;
    new (ptr) ::Ghost::internal::protobuf::GhostMessageHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Ghost::internal::protobuf::GhostMessageHeader::InitAsDefaultInstance();
}

void InitDefaultsGhostMessageHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGhostMessageHeaderImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ghost::internal::protobuf::GhostMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ghost::internal::protobuf::GhostMessage, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ghost::internal::protobuf::GhostMessage, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ghost::internal::protobuf::GhostMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ghost::internal::protobuf::GhostMessageHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ghost::internal::protobuf::GhostMessageHeader, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ghost::internal::protobuf::GhostMessageHeader, hostname_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Ghost::internal::protobuf::GhostMessage)},
  { 8, -1, sizeof(::Ghost::internal::protobuf::GhostMessageHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Ghost::internal::protobuf::_GhostMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Ghost::internal::protobuf::_GhostMessageHeader_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Ghost.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Ghost.proto\022\027Ghost.internal.protobuf\032\031"
      "google/protobuf/any.proto\"\200\001\n\014GhostMessa"
      "ge\022;\n\006header\030\001 \001(\0132+.Ghost.internal.prot"
      "obuf.GhostMessageHeader\022\014\n\004name\030\002 \001(\t\022%\n"
      "\007message\030\003 \001(\0132\024.google.protobuf.Any\"9\n\022"
      "GhostMessageHeader\022\021\n\ttimestamp\030\001 \001(\003\022\020\n"
      "\010hostname\030\002 \001(\t2\204\001\n\032PublisherSubscriberS"
      "ervice\022f\n\014publications\022+.Ghost.internal."
      "protobuf.GhostMessageHeader\032%.Ghost.inte"
      "rnal.protobuf.GhostMessage\"\0000\0012t\n\023Server"
      "ClientService\022]\n\007connect\022%.Ghost.interna"
      "l.protobuf.GhostMessage\032%.Ghost.internal"
      ".protobuf.GhostMessage\"\000(\0010\001B\002P\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 520);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Ghost.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Ghost_2eproto
namespace Ghost {
namespace internal {
namespace protobuf {

// ===================================================================

void GhostMessage::InitAsDefaultInstance() {
  ::Ghost::internal::protobuf::_GhostMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::Ghost::internal::protobuf::GhostMessageHeader*>(
      ::Ghost::internal::protobuf::GhostMessageHeader::internal_default_instance());
  ::Ghost::internal::protobuf::_GhostMessage_default_instance_._instance.get_mutable()->message_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void GhostMessage::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GhostMessage::kHeaderFieldNumber;
const int GhostMessage::kNameFieldNumber;
const int GhostMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GhostMessage::GhostMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Ghost_2eproto::InitDefaultsGhostMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Ghost.internal.protobuf.GhostMessage)
}
GhostMessage::GhostMessage(const GhostMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_header()) {
    header_ = new ::Ghost::internal::protobuf::GhostMessageHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::google::protobuf::Any(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Ghost.internal.protobuf.GhostMessage)
}

void GhostMessage::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_) -
      reinterpret_cast<char*>(&header_)) + sizeof(message_));
  _cached_size_ = 0;
}

GhostMessage::~GhostMessage() {
  // @@protoc_insertion_point(destructor:Ghost.internal.protobuf.GhostMessage)
  SharedDtor();
}

void GhostMessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete message_;
}

void GhostMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GhostMessage::descriptor() {
  ::protobuf_Ghost_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Ghost_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GhostMessage& GhostMessage::default_instance() {
  ::protobuf_Ghost_2eproto::InitDefaultsGhostMessage();
  return *internal_default_instance();
}

GhostMessage* GhostMessage::New(::google::protobuf::Arena* arena) const {
  GhostMessage* n = new GhostMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GhostMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Ghost.internal.protobuf.GhostMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool GhostMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Ghost.internal.protobuf.GhostMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Ghost.internal.protobuf.GhostMessageHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ghost.internal.protobuf.GhostMessage.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Ghost.internal.protobuf.GhostMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Ghost.internal.protobuf.GhostMessage)
  return false;
#undef DO_
}

void GhostMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Ghost.internal.protobuf.GhostMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Ghost.internal.protobuf.GhostMessageHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ghost.internal.protobuf.GhostMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .google.protobuf.Any message = 3;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->message_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Ghost.internal.protobuf.GhostMessage)
}

::google::protobuf::uint8* GhostMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Ghost.internal.protobuf.GhostMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Ghost.internal.protobuf.GhostMessageHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ghost.internal.protobuf.GhostMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .google.protobuf.Any message = 3;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->message_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ghost.internal.protobuf.GhostMessage)
  return target;
}

size_t GhostMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Ghost.internal.protobuf.GhostMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Ghost.internal.protobuf.GhostMessageHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .google.protobuf.Any message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GhostMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Ghost.internal.protobuf.GhostMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GhostMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GhostMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Ghost.internal.protobuf.GhostMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Ghost.internal.protobuf.GhostMessage)
    MergeFrom(*source);
  }
}

void GhostMessage::MergeFrom(const GhostMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Ghost.internal.protobuf.GhostMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_header()) {
    mutable_header()->::Ghost::internal::protobuf::GhostMessageHeader::MergeFrom(from.header());
  }
  if (from.has_message()) {
    mutable_message()->::google::protobuf::Any::MergeFrom(from.message());
  }
}

void GhostMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Ghost.internal.protobuf.GhostMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GhostMessage::CopyFrom(const GhostMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Ghost.internal.protobuf.GhostMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GhostMessage::IsInitialized() const {
  return true;
}

void GhostMessage::Swap(GhostMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GhostMessage::InternalSwap(GhostMessage* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(header_, other->header_);
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GhostMessage::GetMetadata() const {
  protobuf_Ghost_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Ghost_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GhostMessageHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GhostMessageHeader::kTimestampFieldNumber;
const int GhostMessageHeader::kHostnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GhostMessageHeader::GhostMessageHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Ghost_2eproto::InitDefaultsGhostMessageHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Ghost.internal.protobuf.GhostMessageHeader)
}
GhostMessageHeader::GhostMessageHeader(const GhostMessageHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hostname().size() > 0) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Ghost.internal.protobuf.GhostMessageHeader)
}

void GhostMessageHeader::SharedCtor() {
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

GhostMessageHeader::~GhostMessageHeader() {
  // @@protoc_insertion_point(destructor:Ghost.internal.protobuf.GhostMessageHeader)
  SharedDtor();
}

void GhostMessageHeader::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GhostMessageHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GhostMessageHeader::descriptor() {
  ::protobuf_Ghost_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Ghost_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GhostMessageHeader& GhostMessageHeader::default_instance() {
  ::protobuf_Ghost_2eproto::InitDefaultsGhostMessageHeader();
  return *internal_default_instance();
}

GhostMessageHeader* GhostMessageHeader::New(::google::protobuf::Arena* arena) const {
  GhostMessageHeader* n = new GhostMessageHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GhostMessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:Ghost.internal.protobuf.GhostMessageHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GhostMessageHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Ghost.internal.protobuf.GhostMessageHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hostname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ghost.internal.protobuf.GhostMessageHeader.hostname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Ghost.internal.protobuf.GhostMessageHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Ghost.internal.protobuf.GhostMessageHeader)
  return false;
#undef DO_
}

void GhostMessageHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Ghost.internal.protobuf.GhostMessageHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // string hostname = 2;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ghost.internal.protobuf.GhostMessageHeader.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hostname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Ghost.internal.protobuf.GhostMessageHeader)
}

::google::protobuf::uint8* GhostMessageHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Ghost.internal.protobuf.GhostMessageHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // string hostname = 2;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ghost.internal.protobuf.GhostMessageHeader.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hostname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ghost.internal.protobuf.GhostMessageHeader)
  return target;
}

size_t GhostMessageHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Ghost.internal.protobuf.GhostMessageHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hostname = 2;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GhostMessageHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Ghost.internal.protobuf.GhostMessageHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const GhostMessageHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GhostMessageHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Ghost.internal.protobuf.GhostMessageHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Ghost.internal.protobuf.GhostMessageHeader)
    MergeFrom(*source);
  }
}

void GhostMessageHeader::MergeFrom(const GhostMessageHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Ghost.internal.protobuf.GhostMessageHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hostname().size() > 0) {

    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void GhostMessageHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Ghost.internal.protobuf.GhostMessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GhostMessageHeader::CopyFrom(const GhostMessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Ghost.internal.protobuf.GhostMessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GhostMessageHeader::IsInitialized() const {
  return true;
}

void GhostMessageHeader::Swap(GhostMessageHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GhostMessageHeader::InternalSwap(GhostMessageHeader* other) {
  using std::swap;
  hostname_.Swap(&other->hostname_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GhostMessageHeader::GetMetadata() const {
  protobuf_Ghost_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Ghost_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace internal
}  // namespace Ghost

// @@protoc_insertion_point(global_scope)
