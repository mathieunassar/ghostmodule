// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tests.proto

#include "tests.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ghost {
namespace internal {
namespace protobuf {
class TestMessage1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestMessage1>
      _instance;
} _TestMessage1_default_instance_;
class TestMessage2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestMessage2>
      _instance;
} _TestMessage2_default_instance_;
}  // namespace protobuf
}  // namespace internal
}  // namespace ghost
namespace protobuf_tests_2eproto {
static void InitDefaultsTestMessage1() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ghost::internal::protobuf::_TestMessage1_default_instance_;
    new (ptr) ::ghost::internal::protobuf::TestMessage1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ghost::internal::protobuf::TestMessage1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestMessage1 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestMessage1}, {}};

static void InitDefaultsTestMessage2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ghost::internal::protobuf::_TestMessage2_default_instance_;
    new (ptr) ::ghost::internal::protobuf::TestMessage2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ghost::internal::protobuf::TestMessage2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestMessage2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestMessage2}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestMessage1.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestMessage2.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ghost::internal::protobuf::TestMessage1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ghost::internal::protobuf::TestMessage1, field1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ghost::internal::protobuf::TestMessage1, field2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ghost::internal::protobuf::TestMessage1, field3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ghost::internal::protobuf::TestMessage1, tags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ghost::internal::protobuf::TestMessage2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ghost::internal::protobuf::TestMessage2, field1_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ghost::internal::protobuf::TestMessage1)},
  { 9, -1, sizeof(::ghost::internal::protobuf::TestMessage2)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ghost::internal::protobuf::_TestMessage1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ghost::internal::protobuf::_TestMessage2_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "tests.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013tests.proto\022\027ghost.internal.protobuf\"L"
      "\n\014TestMessage1\022\016\n\006field1\030\001 \001(\t\022\016\n\006field2"
      "\030\002 \001(\t\022\016\n\006field3\030\003 \001(\003\022\014\n\004tags\030\004 \003(\t\"\036\n\014"
      "TestMessage2\022\016\n\006field1\030\001 \001(\tB\002P\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tests.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tests_2eproto
namespace ghost {
namespace internal {
namespace protobuf {

// ===================================================================

void TestMessage1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage1::kField1FieldNumber;
const int TestMessage1::kField2FieldNumber;
const int TestMessage1::kField3FieldNumber;
const int TestMessage1::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage1::TestMessage1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tests_2eproto::scc_info_TestMessage1.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ghost.internal.protobuf.TestMessage1)
}
TestMessage1::TestMessage1(const TestMessage1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field1().size() > 0) {
    field1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field1_);
  }
  field2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field2().size() > 0) {
    field2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field2_);
  }
  field3_ = from.field3_;
  // @@protoc_insertion_point(copy_constructor:ghost.internal.protobuf.TestMessage1)
}

void TestMessage1::SharedCtor() {
  field1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field3_ = GOOGLE_LONGLONG(0);
}

TestMessage1::~TestMessage1() {
  // @@protoc_insertion_point(destructor:ghost.internal.protobuf.TestMessage1)
  SharedDtor();
}

void TestMessage1::SharedDtor() {
  field1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestMessage1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestMessage1::descriptor() {
  ::protobuf_tests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMessage1& TestMessage1::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tests_2eproto::scc_info_TestMessage1.base);
  return *internal_default_instance();
}


void TestMessage1::Clear() {
// @@protoc_insertion_point(message_clear_start:ghost.internal.protobuf.TestMessage1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field3_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TestMessage1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ghost.internal.protobuf.TestMessage1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field1().data(), static_cast<int>(this->field1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ghost.internal.protobuf.TestMessage1.field1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string field2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field2().data(), static_cast<int>(this->field2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ghost.internal.protobuf.TestMessage1.field2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 field3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ghost.internal.protobuf.TestMessage1.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ghost.internal.protobuf.TestMessage1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ghost.internal.protobuf.TestMessage1)
  return false;
#undef DO_
}

void TestMessage1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ghost.internal.protobuf.TestMessage1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field1 = 1;
  if (this->field1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field1().data(), static_cast<int>(this->field1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage1.field1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field1(), output);
  }

  // string field2 = 2;
  if (this->field2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field2().data(), static_cast<int>(this->field2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage1.field2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field2(), output);
  }

  // int64 field3 = 3;
  if (this->field3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->field3(), output);
  }

  // repeated string tags = 4;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage1.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->tags(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ghost.internal.protobuf.TestMessage1)
}

::google::protobuf::uint8* TestMessage1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ghost.internal.protobuf.TestMessage1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field1 = 1;
  if (this->field1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field1().data(), static_cast<int>(this->field1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage1.field1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field1(), target);
  }

  // string field2 = 2;
  if (this->field2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field2().data(), static_cast<int>(this->field2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage1.field2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field2(), target);
  }

  // int64 field3 = 3;
  if (this->field3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->field3(), target);
  }

  // repeated string tags = 4;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage1.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->tags(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ghost.internal.protobuf.TestMessage1)
  return target;
}

size_t TestMessage1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ghost.internal.protobuf.TestMessage1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // string field1 = 1;
  if (this->field1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field1());
  }

  // string field2 = 2;
  if (this->field2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field2());
  }

  // int64 field3 = 3;
  if (this->field3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->field3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMessage1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ghost.internal.protobuf.TestMessage1)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ghost.internal.protobuf.TestMessage1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ghost.internal.protobuf.TestMessage1)
    MergeFrom(*source);
  }
}

void TestMessage1::MergeFrom(const TestMessage1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ghost.internal.protobuf.TestMessage1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.field1().size() > 0) {

    field1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field1_);
  }
  if (from.field2().size() > 0) {

    field2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field2_);
  }
  if (from.field3() != 0) {
    set_field3(from.field3());
  }
}

void TestMessage1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ghost.internal.protobuf.TestMessage1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage1::CopyFrom(const TestMessage1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ghost.internal.protobuf.TestMessage1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage1::IsInitialized() const {
  return true;
}

void TestMessage1::Swap(TestMessage1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage1::InternalSwap(TestMessage1* other) {
  using std::swap;
  tags_.InternalSwap(CastToBase(&other->tags_));
  field1_.Swap(&other->field1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  field2_.Swap(&other->field2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(field3_, other->field3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestMessage1::GetMetadata() const {
  protobuf_tests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestMessage2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessage2::kField1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMessage2::TestMessage2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_tests_2eproto::scc_info_TestMessage2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ghost.internal.protobuf.TestMessage2)
}
TestMessage2::TestMessage2(const TestMessage2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field1().size() > 0) {
    field1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field1_);
  }
  // @@protoc_insertion_point(copy_constructor:ghost.internal.protobuf.TestMessage2)
}

void TestMessage2::SharedCtor() {
  field1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestMessage2::~TestMessage2() {
  // @@protoc_insertion_point(destructor:ghost.internal.protobuf.TestMessage2)
  SharedDtor();
}

void TestMessage2::SharedDtor() {
  field1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestMessage2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestMessage2::descriptor() {
  ::protobuf_tests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tests_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMessage2& TestMessage2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_tests_2eproto::scc_info_TestMessage2.base);
  return *internal_default_instance();
}


void TestMessage2::Clear() {
// @@protoc_insertion_point(message_clear_start:ghost.internal.protobuf.TestMessage2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TestMessage2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ghost.internal.protobuf.TestMessage2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string field1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field1().data(), static_cast<int>(this->field1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ghost.internal.protobuf.TestMessage2.field1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ghost.internal.protobuf.TestMessage2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ghost.internal.protobuf.TestMessage2)
  return false;
#undef DO_
}

void TestMessage2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ghost.internal.protobuf.TestMessage2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field1 = 1;
  if (this->field1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field1().data(), static_cast<int>(this->field1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage2.field1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field1(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ghost.internal.protobuf.TestMessage2)
}

::google::protobuf::uint8* TestMessage2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ghost.internal.protobuf.TestMessage2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field1 = 1;
  if (this->field1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field1().data(), static_cast<int>(this->field1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ghost.internal.protobuf.TestMessage2.field1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field1(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ghost.internal.protobuf.TestMessage2)
  return target;
}

size_t TestMessage2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ghost.internal.protobuf.TestMessage2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string field1 = 1;
  if (this->field1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMessage2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ghost.internal.protobuf.TestMessage2)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessage2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMessage2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ghost.internal.protobuf.TestMessage2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ghost.internal.protobuf.TestMessage2)
    MergeFrom(*source);
  }
}

void TestMessage2::MergeFrom(const TestMessage2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ghost.internal.protobuf.TestMessage2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field1().size() > 0) {

    field1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field1_);
  }
}

void TestMessage2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ghost.internal.protobuf.TestMessage2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessage2::CopyFrom(const TestMessage2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ghost.internal.protobuf.TestMessage2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessage2::IsInitialized() const {
  return true;
}

void TestMessage2::Swap(TestMessage2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMessage2::InternalSwap(TestMessage2* other) {
  using std::swap;
  field1_.Swap(&other->field1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestMessage2::GetMetadata() const {
  protobuf_tests_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tests_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace internal
}  // namespace ghost
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ghost::internal::protobuf::TestMessage1* Arena::CreateMaybeMessage< ::ghost::internal::protobuf::TestMessage1 >(Arena* arena) {
  return Arena::CreateInternal< ::ghost::internal::protobuf::TestMessage1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ghost::internal::protobuf::TestMessage2* Arena::CreateMaybeMessage< ::ghost::internal::protobuf::TestMessage2 >(Arena* arena) {
  return Arena::CreateInternal< ::ghost::internal::protobuf::TestMessage2 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
